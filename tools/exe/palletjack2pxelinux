#!/usr/bin/env ruby

# Write PXELINUX boot menus from a Palletjack warehouse
#
# Data model assumptions:
#
# Each +os+ object will contain the keys:
#   host:
#     netinstall:
#       baseurl: <URL to OS installation>
#     pxelinux:
#       config: <basename of pxelinux menu file w/o .menu>
#
# Each +netinstall+ object will contain the keys:
#   host:
#     netinstall:
#       label: <human-friendly label for variant>
#       ksurl: ["none"|<URL to netinstall file>]
#     pxelinux:
#       config: <basename of pxelinux menu file w/o .menu>
#       kernel: <tftp path of pxelinux kernel>
#       append: <pxelinux kernel parameters>
#
# PXELINUX directory tree:
#
# /var/lib/tftpboot/
#  |- pxelinux.cfg
#  |   |- default -> ../config/default
#  |   |- 01-<MAC address> -> ../config/<OS>-<Variant>.menu
#  |   ...
#  |- config
#  |   |- default
#  |   |- linux.menu
#  |   |- <OS>.menu
#  |   |- <OS>-<Variant>.menu
#  |   ...
#  \- boot
#      |- <OS>
#      |   |- vmlinuz
#      |   |- initrd
#      |   ...
#      ...
#
# Point this script's output directory at /var/lib/tftpboot/, and it
# will create the MAC address symlinks, and menu tree for linux
# installations.
#
# The boot/... and config/default needs to be populated by other means.

require 'palletjack/tool'
require 'fileutils'

class PalletJack2PXELinux < PalletJack::Tool
  def parse_options(opts)
    opts.banner =
"Usage: #{$PROGRAM_NAME} -w <warehouse> -o <output directory>

Write PXELINUX boot configuration files from a Palletjack warehouse"

    opts.on('-o DIR', '--output DIR', 'output directory (tftpboot/)',
            String) {|dir| options[:output] = dir }

    required_option :output
  end

  # Generate pxe menus for each OS configuration

  def pxemenu_for_netinstall(netinstall)
    config = netinstall['host.pxelinux.config']
    os_label = netinstall['system.os'].gsub(/-/, ' ')
    ni_label = netinstall['host.netinstall.label']
    kernel = netinstall['host.pxelinux.kernel']
    append = netinstall['host.pxelinux.append']

    config_file :output, 'config', "#{config}.menu" do |menufile|
      menufile << git_header('palletjack2pxelinux')
      menufile << "
UI menu.c32
PROMPT 0
MENU INCLUDE /config/graphics.conf
MENU AUTOBOOT Installing #{os_label} (#{ni_label}) in # seconds
TIMEOUT 100

MENU TITLE Install #{os_label} (#{ni_label})

LABEL #{config}
  MENU LABEL ^Install #{os_label} (#{ni_label})
  MENU DEFAULT
  KERNEL #{kernel}
  APPEND #{append}

LABEL MainMenu
  MENU LABEL ^Main Menu
  KERNEL menu.c32
  APPEND /config/default
"
    end
  end

  # Generate pxe menus for each OS version

  def pxemenu_for_operating_system(os)
    config = os['host.pxelinux.config']
    os_label = config.gsub(/-/, ' ')
    kernel = os['host.pxelinux.kernel']
    append = os['host.pxelinux.append']

    config_file :output, 'config', "#{config}.menu" do |menufile|
      menufile << git_header('palletjack2pxelinux')
      menufile << "
UI menu.c32
PROMPT 0
MENU INCLUDE /config/graphics.conf

MENU TITLE #{os_label} Installation Menu
"

      os.descendants(kind: 'netinstall') do |netinstall|
        next unless ni_label = netinstall['host.netinstall.label']
        config = netinstall['host.pxelinux.config']
        kernel = netinstall['host.pxelinux.kernel']
        append = netinstall['host.pxelinux.append']

        pxemenu_for_netinstall(netinstall)

        menufile << "
LABEL #{config}
  MENU LABEL Install #{os_label} (#{ni_label})
  KERNEL menu.c32
  APPEND /config/#{config}.menu
"
      end

      menufile << "
LABEL MainMenu
  MENU LABEL ^Main Menu
  KERNEL menu.c32
  APPEND /config/default
"
    end
  end

  def output
    config_dir :output, 'config'
    config_dir :output, 'pxelinux.cfg'

    config_file :output, 'config', 'linux.menu' do |menufile|
      menufile << git_header('palletjack2pxelinux')
      menufile << "
UI menu.c32
PROMPT 0
MENU INCLUDE /config/graphics.conf

MENU TITLE Linux Installation Menu
"

      jack.each(kind: 'os') do |os|
        next unless config = os['host.pxelinux.config']

        label = config.gsub(/-/, ' ')

        pxemenu_for_operating_system(os)

        menufile << "
LABEL #{config}
  MENU LABEL Install #{label}
  KERNEL menu.c32
  APPEND /config/#{config}.menu
"
      end
    end

    # Generate pxe default menu links for each system

    jack.each(kind: 'system') do |system|
      system.children(kind: 'ipv4_interface') do |nic|
        if system['host.pxelinux.config']
          menuname = "#{system['host.pxelinux.config']}.menu"
          linkname = "01-#{nic['net.layer2.address'].gsub(':', '-').downcase}"

          FileUtils.ln_s(config_path('..', 'config', menuname),
                         config_path(:output, 'pxelinux.cfg', linkname),
                         :force => true)
        end
      end
    end
  end
end

if PalletJack2PXELinux.standalone?(__FILE__)
  PalletJack2PXELinux.run
end
